{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"cloudscale.ch CLI","text":"<p>The official cloudscale.ch command line interface (CLI) client.</p>"},{"location":"#install","title":"Install","text":"<p>Packages are published on PyPi.</p> <p>Install using <code>pip</code> or alternatively pipx:</p> <pre><code>pipx install cloudscale-cli\ncloudscale --version\n</code></pre>"},{"location":"#usage","title":"Usage","text":"<pre><code>cloudscale --help\n</code></pre> <pre><code>Usage: cloudscale [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  --version                  Show the version and exit.\n  -a, --api-token TEXT       API token.\n  -p, --profile TEXT         Profile used in config file.\n  --debug                    Enables debug log output.\n  -o, --output [table|json]  Output format.  [default: table]\n  -v, --verbose              Verbose output.\n  -h, --help                 Show this message and exit.\n\nCommands:\n  custom-image\n  flavor\n  floating-ip\n  image\n  network\n  objects-user\n  region\n  server\n  server-group\n  subnet\n  volume\n</code></pre>"},{"location":"auth/","title":"Authentication","text":"<p>There are 3 ways to configure the authentication:</p> <ul> <li>Using a config file</li> <li>Using the <code>--api-token</code> parameter</li> <li>Using the environment variable <code>CLOUDSCALE_API_TOKEN</code></li> </ul>"},{"location":"auth/#config-file-with-profiles","title":"Config File with Profiles","text":"<p>Create an ini file in your <code>$XDG_CONFIG_HOME/cloudscale/cloudscale.ini</code>, <code>.cloudscale.ini</code> (leading dot) in your <code>$HOME</code> or a <code>cloudscale.ini</code> (without leading dot) in the <code>CWD</code> with the following schema:</p> <pre><code>[default]\napi_token = &lt;token&gt;\n</code></pre> <p>Do NOT quote the token.</p> <p>The default profile taken if available is <code>default</code>. The profile can be chosen by passing <code>--profile</code> or <code>CLOUDSCALE_PROFILE</code> ENV variable.</p> <pre><code>export CLOUDSCALE_PROFILE=staging\n</code></pre> <pre><code>[production]\napi_token = &lt;token&gt;\n\n[staging]\napi_token = &lt;token&gt;\n</code></pre> <p>Passing the command line option will overwrite the ENV var as one would expect:</p> <pre><code>cloudscale --profile production server list\n</code></pre>"},{"location":"auth/#command-line-argument","title":"Command Line Argument","text":"<p>Use the <code>--api-token</code> parameter:</p> <pre><code>cloudscale --api-token &lt;your_token&gt; server create ...\n</code></pre>"},{"location":"auth/#by-evironment-variable","title":"By Evironment Variable","text":"<p>Use the ENV <code>CLOUDSCALE_API_TOKEN</code> variable:</p> <pre><code>export CLOUDSCALE_API_TOKEN=&lt;your token&gt;\ncloudscale flavor list\n</code></pre>"},{"location":"autocompletion/","title":"Autocompletion","text":""},{"location":"autocompletion/#zsh","title":"zsh","text":"<p>For Zsh, add this to <code>~/.zshrc</code>:</p> <pre><code>eval \"$(_CLOUDSCALE_COMPLETE=source_zsh cloudscale)\"\n</code></pre>"},{"location":"autocompletion/#bash","title":"bash","text":"<p>For Bash, add this to <code>~/.bashrc</code>:</p> <pre><code>eval \"$(_CLOUDSCALE_COMPLETE=source cloudscale)\"\n</code></pre>"},{"location":"debug/","title":"Verbosity and Debugging","text":"<p>Increase the verbosity by changing the log level from its default value <code>ERROR</code> to the value <code>INFO</code>:</p> <pre><code>cloudscale --debug server list\n</code></pre> <p>or alternatively</p> <pre><code>export CLOUDSCALE_DEBUG=1\ncloudscale server list\n</code></pre> <p>To set the default log level e.g. to <code>DEBUG</code> use the <code>CLOUDSCALE_LOG_LEVEL</code> environment variable:</p> <pre><code>export CLOUDSCALE_LOG_LEVEL=debug\ncloudscale server list\n</code></pre>"},{"location":"server/","title":"Server Usage Examples","text":""},{"location":"server/#create-servers","title":"Create Servers","text":"<p>See available flavors:</p> <pre><code>cloudscale flavor list\n</code></pre> <p>and images:</p> <pre><code>cloudscale image list\n</code></pre> <p>Create one server:</p> <pre><code>cloudscale server create \\\n--flavor flex-2 \\\n--image centos-7 \\\n--name my-server \\\n--ssh-key \"$(cat ~/.ssh/id_rsa.pub)\"\n</code></pre> <p>Create up to 10 servers in a row with <code>--count</code>:</p> <p>Tip</p> <p>The option <code>--name</code> allows to use string format syntax with 2 special variables:</p> <ul> <li><code>counter</code>: A number representing the current iteration while creating multiple servers.</li> <li><code>uid</code>: A random 8 char/number long string.</li> </ul> <p>This allows to create dynamic names, e.g.:</p> <ul> <li>Single number suffix: <code>--name 'myserver-{counter}'</code></li> <li>Number with leading zero suffix: <code>--name 'server-{counter:02d}'</code></li> <li>Random string suffix: <code>--name 'server-{uid}'</code></li> <li>Combinations: <code>--name 'server-{uid}-{counter:02d}.example.com'</code></li> </ul> <pre><code>cloudscale server create \\\n--flavor flex-2 \\\n--image centos-7 \\\n--ssh-key \"$(cat ~/.ssh/id_rsa.pub)\" \\\n--name 'my-server-{counter}' \\\n--count 10\n</code></pre> <p>Tip</p> <p>To ensure all servers created have booted and are running by providing the option <code>--wait</code>.</p>"},{"location":"server/#usage-of-the-interface-option-in-server-create-and-server-update","title":"Usage of the <code>--interface</code> option in <code>server create</code> and <code>server update</code>","text":"<p>If the <code>--interface</code> option is used, <code>--use-{public,private}-network</code> options are disabled.</p> <p>To specify more than one interface, use the <code>--interface</code> option repeatedly.</p> <p>Warning</p> <p>When making changes to a server's interfaces, you must (re-)specify all interfaces that should be attached to the server (including all interfaces that should not be changed), e.g.:</p> <pre><code>cloudscale server update \\\n--interface network=UUID1 \\\n--interface subnet=UUID5,address=A.B.C.D\n</code></pre> <p>Tip</p> <p>We recommend to not update interfaces while a server is under production workload as short losses of connectivity might occur.</p> <p>This are the examples from the api documentation:</p> <ul> <li>Create a public network interface with an automatically assigned IPv4 address and an IPv6 address if <code>use_ipv6</code> is set to true:</li> </ul> <pre><code>--interface network=public\n</code></pre> <ul> <li>Create a private network interface on the network identified by \"UUID1\". The interface will automatically be assigned an address from the DHCP range of the network's subnet.</li> </ul> <pre><code>--interface network=UUID1\n</code></pre> <ul> <li>Create a private network interface on the network on which the subnet identified by \"UUID2\" is configured. The interface will automatically be assigned an address from the DHCP range of the subnet.</li> </ul> <pre><code>--interface subnet=UUID2\n</code></pre> <ul> <li>This is equivalent to the schema defined above. It is only valid if the subnet identified by \"UUID4\" is configured on the network identified by \"UUID3\".</li> </ul> <pre><code>--interface network=UUID3,subnet=UUID4\n</code></pre> <ul> <li>Create a private network interface on the network on which the subnet identified by \"UUID5\" is configured. The interface will automatically be assigned the address A.B.C.D.</li> </ul> <pre><code>--interface subnet=UUID5,address=A.B.C.D\n</code></pre> <ul> <li>This is equivalent to the schema defined above. It is only valid if the subnet identified by \"UUID7\" is configured on the network identified by \"UUID6\".</li> </ul> <pre><code>--interface network=UUID6,subnet=UUID7,address=A.B.C.D\n</code></pre> <ul> <li>Create a private network interface on the network identified by \"UUID8\". No IP address will be assigned using DHCP.</li> </ul> <pre><code>--interface network=UUID8,address=\n</code></pre>"},{"location":"server/#list-servers","title":"List Servers","text":"<p>Get a list as table view:</p> <pre><code>cloudscale server list\n</code></pre> <p>Get a list as JSON response:</p> <pre><code>cloudscale -o json server list\n</code></pre>"},{"location":"server/#filter-by-tag","title":"Filter by Tag","text":"<p>List servers having the tag project with value gemini:</p> <pre><code>cloudscale server list --filter-tag project=gemini\n</code></pre> <p>List servers having a tag project:</p> <pre><code>cloudscale server list --filter-tag project\n</code></pre>"},{"location":"server/#filter-by-json-query","title":"Filter by JSON Query","text":"<p>Get a list of stopped servers:</p> <pre><code>cloudscale server list --filter-json '[?status == `stopped`]'\n</code></pre> <p>Get a list of stopped servers having tag <code>project=demo</code> and start them after accepting:</p> <pre><code>cloudscale server list \\\n--filter-tag project=demo \\\n--filter-json '[?status == `stopped`]' \\\n--action start\n...\nDo you want to start? [y/N]:\n</code></pre> <p>Start a list of stopped servers after accepting having tag <code>project=demo</code>:</p> <pre><code>cloudscale server list \\\n--filter-tag project=demo \\\n--filter-json '[?status == `stopped`]' \\\n--action start\n...\nDo you want to start? [y/N]:\n</code></pre> <p>Delete a list of stopped servers after accepting having tag <code>project=demo</code>:</p> <pre><code>cloudscale server list \\\n--filter-tag project=demo \\\n--filter-json '[?status == `stopped`]' \\\n--delete\n...\nDo you want to delete? [y/N]:\n</code></pre> <p>Get a simplified custom JSON list of stopped servers in profile <code>production</code>:</p> <pre><code>cloudscale \\\n--output json \\\n--profile production \\\nserver list \\\n--filter-json '[?status == `stopped`].{\"server_name\": name, \"zone\": zone.slug, \"image\": image.slug, \"flavor\": flavor.slug}'\n[\n    {\n        \"flavor\": \"flex-8\",\n        \"image\": \"rhel-7\",\n        \"server_name\": \"server1\",\n        \"zone\": \"rma1\"\n    },\n    {\n        \"flavor\": \"flex-8\",\n        \"image\": \"centos-7\",\n        \"server_name\": \"server2\",\n        \"zone\": \"rma1\"\n    }\n]\n</code></pre>"},{"location":"server/#server-actions","title":"Server Actions","text":""},{"location":"server/#ssh-into-to-a-server","title":"SSH into to a Server","text":"<p>SSH into a server via its public IP:</p> <pre><code>cloudscale server ssh &lt;uuid or unique name&gt;\n</code></pre>"},{"location":"server/#stop-a-server","title":"Stop a Server","text":"<p>Stop a server:</p> <pre><code>cloudscale server stop &lt;uuid or unique name&gt;\n</code></pre>"},{"location":"server/#start-a-server","title":"Start a Server","text":"<pre><code>cloudscale server start &lt;uuid or unique name&gt;\n</code></pre>"},{"location":"server/#delete-a-server","title":"Delete a Server","text":"<p>With prompt:</p> <pre><code>cloudscale server delete &lt;uuid or unique name&gt;\n</code></pre> <p>Just delete without questions asked:</p> <pre><code>cloudscale server delete --force &lt;uuid or unique name&gt;\n</code></pre>"},{"location":"tags/","title":"Working with Tags","text":""},{"location":"tags/#addupdate-tags","title":"Add/Update Tags","text":"<p>Add/Update tags (but keep all existing with different keys):</p> <pre><code>cloudscale &lt;resource&gt; update &lt;uuid&gt; --tag project=apollo --tag stage=prod\n</code></pre>"},{"location":"tags/#delete-a-single-tag","title":"Delete a single Tag","text":"<p>Delete a tag (but keep all others existing):</p> <pre><code>cloudscale &lt;resource&gt; update &lt;uuid&gt; --clear-tag status\n</code></pre>"},{"location":"tags/#addupdate-and-remove-tags-at-once","title":"Add/Update and remove Tags at once","text":"<p>Add/Update tags and remove a specific tag key:</p> <pre><code>cloudscale &lt;resource&gt; update &lt;uuid&gt; \\\n--tag project=apollo --tag stage=prod --clear-tag status\n</code></pre> <p>Add/Update tags, remove other tags:</p> <pre><code>cloudscale &lt;resource&gt; update &lt;uuid&gt; \\\n--tag project=apollo --tag stage=prod --clear-all-tags\n</code></pre>"}]}